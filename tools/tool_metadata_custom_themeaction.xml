<?xml version="1.0" encoding="UTF-8"?>
<tool type="themeaction">
    <cbinfo-metadata>
        <param name="tool.help.text">Hjælpetext til custom metadatamodul</param>
    </cbinfo-metadata>

    <displayname><![CDATA[[Se temaets metadata]]]></displayname>
    <description><![CDATA[[Et værktøj til at kigge på eller editere i metadata på temaet.]]]></description>

    <src><![CDATA[[
        themeActions.registerAction(new ThemeAction({
            name: 'metadata_custom',

            actionfunction: theme => {
                theme.show()
                var dialog = new Dialog({
                    id: 'metadata_dialog',
                    title: 'Metadata',
                    resizable: {
                        x: true,
                        y: false
                    },
                    minwidth: 300
                })

                var ds = spm.getSession().getDatasource('ds_metadata')

                ds.execute({command: 'read-metadata-for-theme', theme: theme.name}, resp => {
                    var user_short = spm.getSession().getPrincipal().shortid
                    var user_long = spm.getSession().getPrincipal().name
                    if (resp.length > 0) {

                        var metadata = resp[0]

                        var contentDiv = spsjq('<div></div>')
                        contentDiv.load("modules/metadata_custom/html/metadata_form.html", () => {
                            dialog.addContentHTML(contentDiv)
                            
                            document.getElementById('themeName').innerHTML = theme._displayname
                            document.getElementById('ansvarlig').value = metadata.dataejer;
                            document.getElementById('ansvarlig_short').value = metadata.dataejer_short;
                            document.getElementById('email').value = metadata.dataejer_email;
                            document.getElementById('afdeling').value = metadata.afdeling;
                            document.getElementById('status').value = metadata.status;
                            document.getElementById('frekvens').value = metadata.opdaterings_frekvens;
                            document.getElementById('revision_dato').value = metadata.revision_dato.split(' ')[0];
                            document.getElementById('beskrivelse').innerHTML = metadata.beskrivelse;
                            
                            document.querySelectorAll('#metadata input, #metadata textarea, #metadata select').forEach(el => {
                                if (el.type === 'text' || el.type === 'textarea') {
                                    el.setAttribute('readonly', '')
                                        el.style.cursor = 'not-allowed'
                                } else if (el.type === 'select-one') {
                                    el.setAttribute('disabled', '')
                                        el.style.cursor = 'not-allowed'
                                }
                            })
                        })
                        

                        dialog.addButtonsHTML(`
                                            <div style='text-align: right;'>
                                                <button id="gemBtn" disabled>Gem metadata</button>
                                            </div>
                                            <label for="rediger">Rediger metadata</label>
                                            <input type="checkbox" id="redigerCheckbox">`)
                        
                        dialog.showDialog()

                        var redigerCheckboxEl = document.getElementById('redigerCheckbox')
                        var gemBtnEl = document.getElementById('gemBtn')

                        redigerCheckboxEl.addEventListener('change', () => {
                            var inputEls = document.querySelectorAll('#metadata input, #metadata textarea, #metadata select')
                            gemBtnEl.removeAttribute('disabled')
                            if (redigerCheckboxEl.checked) {
                                inputEls.forEach(el => {
                                    if (el.type != 'date') {
                                        el.removeAttribute('readonly')
                                        el.removeAttribute('disabled')
                                        el.style.cursor = 'auto'
                                    }
                                })
                            } else if (!redigerCheckboxEl.checked) {
                                gemBtnEl.setAttribute('disabled', '')
                                inputEls.forEach(el => {
                                    if (el.type === 'text' || el.type === 'textarea') {
                                        el.setAttribute('readonly', '')
                                        el.style.cursor = 'not-allowed'
                                    } else if (el.type === 'select-one') {
                                        el.setAttribute('disabled', '')
                                        el.style.cursor = 'not-allowed'
                                    }
                                })
                            }
                        })

                        document.getElementById('gemBtn').addEventListener('click', () => {
                            ds.execute({
                                command: 'update-theme-metadata',
                                beskrivelse: document.getElementById('beskrivelse').value,
                                dataejer: document.getElementById('ansvarlig').value,
                                dataejer_short: document.getElementById('ansvarlig_short').value,
                                dataejer_email: document.getElementById('email').value,
                                status: document.getElementById('status').value,
                                afdeling: document.getElementById('afdeling').value,
                                opdaterings_frekvens: document.getElementById('frekvens').value,
                                user_short: user_short,
                                user_long: user_long,
                                id: metadata.id
                            }, () => {
                                toastr.success('Metadata gemt', 'Success')
                                /*spsjq(`div[themename="${theme.name}"] > div > span`).text(document.getElementById('beskrivelse').value)*/
                            })
                        })
                    } else {

                        var contentDiv = spsjq('<div></div>')
                        contentDiv.load("modules/metadata_custom/html/metadata_form.html", () => {
                            dialog.addContentHTML(contentDiv)

                            document.getElementById('themeName').innerHTML = theme._displayname
                            document.getElementById('ansvarlig').setAttribute('placeholder', 'Indtast dataejers navn')
                            document.getElementById('ansvarlig_short').setAttribute('placeholder', 'Windows login')
                            document.getElementById('email').setAttribute('placeholder', 'test@slagelse.dk')
                            document.getElementById('afdeling').setAttribute('placeholder', 'F.eks. Difitalisering')
                            document.getElementById('beskrivelse').setAttribute('placeholder', 'Kort beskrivelse af datsættet og dets formål')
                            document.getElementById('status').setAttribute('placeholder', 'Er data gældende eller historiske?')
                            document.getElementById('frekvens').setAttribute('placeholder', 'Hvor ofte bliver data opdateret?')
                        })

                        dialog.addButtonsHTML(`
                                            <div style='text-align: right;'>
                                                <button id="gemBtn">Gem metadata</button>
                                            </div>`)
                        
                        dialog.showDialog()

                        var redigerCheckboxEl = document.getElementById('redigerCheckbox')
                        var gemBtnEl = document.getElementById('gemBtn')

                        document.getElementById('gemBtn').addEventListener('click', () => {
                            var validate = {
                                dataejer: document.getElementById('ansvarlig').value,
                                dataejer_short:  document.getElementById('ansvarlig_short').value,
                                dataejer_email: document.getElementById('email').value,
                                status: document.getElementById('status').value,
                                opdaterings_frekvens: document.getElementById('frekvens').value
                            }

                            if (Object.values(validate).includes('')) {
                                let dataejer = document.getElementById('ansvarlig')
                                let dataejer_short = document.getElementById('ansvarlig_short')
                                let dataejer_email = document.getElementById('email')
                                let status = document.getElementById('status')
                                let opdaterings_frekvens = document.getElementById('frekvens')

                                dataejer.style.borderColor = '#ff000030'
                                dataejer_short.style.borderColor = '#ff000030'
                                dataejer_email.style.borderColor = '#ff000030'
                                status.style.borderColor = '#ff000030'
                                opdaterings_frekvens.style.borderColor = '#ff000030'

                                toastr.error('Mangler værdier. Kan ikke gemme!', 'Fejl')
                            } else {
                                ds.execute({
                                    command: 'create-theme-metadata',
                                    beskrivelse: document.getElementById('beskrivelse').value,
                                    dataejer: document.getElementById('ansvarlig').value,
                                    dataejer_short: document.getElementById('ansvarlig_short').value,
                                    dataejer_email: document.getElementById('email').value,
                                    theme: theme.name,
                                    status: document.getElementById('status').value,
                                    afdeling: document.getElementById('afdeling').value,
                                    opdaterings_frekvens: document.getElementById('frekvens').value,
                                    revision_user_short: user_short,
                                    revision_user_long: user_long
                                }, () => {
                                    toastr.success('Metadata gemt', 'Success')
                                    /*spsjq(`div[themename="${theme.name}"] > div > span`).text(document.getElementById('beskrivelse').value)*/
                                    dialog.close()
                                })
                            }
                        })
                    }

                })



            },

            conditionfunction: theme => {
                return true
            },

            buttonoptions: {
                tooltip: 'Se metadata for tema',
				icon: spatialmap.gui.SKIN_PATH_AND_NAME + "/images/buttons/meta.png"
            }
        }))
    ]]]></src>
    

</tool>